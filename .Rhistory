par(mfrow=c(1,2))
par(mfrow=c(1,2))
data1 <- read.table(
header=TRUE, text='
Criteria     Techniques              Percentage
1    FPR       UNSWNB-DNS-ensemble            1.38
2    DR        UNSWNB-DNS-ensemble            98.93
3    FPR       NIMS-DNS-ensemble              2.01
4    DR        NIMS-DNS-ensemble              97.38
5    FPR       UNSWNB-DNS-SVM                 6.13
6    DR        UNSWNB-DNS-SVM                 94.58
7    FPR       NIMS-DNS-BN                    7.25
8    DR        NIMS-DNS-BN                    93.17
')
ggplot(data1,aes(Techniques, Percentage, fill = Criteria)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(values=c("green", "red"))
data2 <- read.table(
header=TRUE, text='
Criteria     Techniques              Percentage
1    FPR       UNSWNB-HTTP-ensemble           2.58
2    DR        UNSWNB-HTTP-ensemble           97.02
3    FPR       NIMS-HTTP-ensemble             2.15
4    DR        NIMS-HTTP-ensemble             97.95
5    FPR       UNSWNB-HTTP-SVM                5.81
6    DR        UNSWNB-HTTP-SVM                95.52
7    FPR       NIMS-HTTP-BN                   7.20
8    DR        NIMS-HTTP-BN                    94.11
')
ggplot(data2,aes(Techniques, Percentage, fill = Criteria)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(values=c("green", "red"))
par(mfrow=c(1,2))
data1 <- read.table(
header=TRUE, text='
Criteria     Techniques              Percentage
1    FPR       UNSWNB-DNS-ensemble            1.38
2    DR        UNSWNB-DNS-ensemble            98.93
3    FPR       NIMS-DNS-ensemble              2.01
4    DR        NIMS-DNS-ensemble              97.38
5    FPR       UNSWNB-DNS-SVM                 6.13
6    DR        UNSWNB-DNS-SVM                 94.58
7    FPR       NIMS-DNS-BN                    7.25
8    DR        NIMS-DNS-BN                    93.17
')
ggplot(data1,aes(Techniques, Percentage, fill = Criteria)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(values=c("green", "red"))
data2 <- read.table(
header=TRUE, text='
Criteria     Techniques              Percentage
1    FPR       UNSWNB-HTTP-ensemble           2.58
2    DR        UNSWNB-HTTP-ensemble           97.02
3    FPR       NIMS-HTTP-ensemble             2.15
4    DR        NIMS-HTTP-ensemble             97.95
5    FPR       UNSWNB-HTTP-SVM                5.81
6    DR        UNSWNB-HTTP-SVM                95.52
7    FPR       NIMS-HTTP-BN                   7.20
8    DR        NIMS-HTTP-BN                    94.11
')
ggplot(data2,aes(Techniques, Percentage, fill = Criteria)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(values=c("green", "red"))
data1 <- read.table(
header=TRUE, text='
Criteria     Techniques              Percentage
1    FPR       UNSWNB-DNS-ensemble            1.38
2    DR        UNSWNB-DNS-ensemble            98.93
3    FPR       NIMS-DNS-ensemble              2.01
4    DR        NIMS-DNS-ensemble              97.38
5    FPR       UNSWNB-DNS-SVM                 6.13
6    DR        UNSWNB-DNS-SVM                 94.58
7    FPR       NIMS-DNS-BN                    7.25
8    DR        NIMS-DNS-BN                    93.17
')
ggplot(data1,aes(Techniques, Percentage, fill = Criteria)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(values=c("green", "red"))
data1 <- read.table(
header=TRUE, text='
Criteria     Techniques              Percentage
1    FPR       DNS-UNSWNB-ensemble            1.38
2    DR        DNS-UNSWNB-ensemble            98.93
3    FPR       DNS-NIMS-ensemble              2.01
4    DR        DNS-NIMS-nsemble              97.38
5    FPR       DNS-UNSWNB-SVM                 6.13
6    DR        DNS-UNSWNB-SVM                 94.58
7    FPR       DNS-NIMS-BN                    7.25
8    DR        DNS-NIMS-BN                    93.17
')
ggplot(data1,aes(Techniques, Percentage, fill = Criteria)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(values=c("green", "red"))
data1 <- read.table(
header=TRUE, text='
Criteria     Techniques              Percentage
1    FPR       DNS-UNSWNB-ensemble            1.38
2    DR        DNS-UNSWNB-ensemble            98.93
5    FPR       DNS-UNSWNB-SVM                 6.13
6    DR        DNS-UNSWNB-SVM                 94.58
3    FPR       DNS-NIMS-ensemble              2.01
4    DR        DNS-NIMS-ensemble              97.38
7    FPR       DNS-NIMS-BN                    7.25
8    DR        DNS-NIMS-BN                    93.17
')
ggplot(data1,aes(Techniques, Percentage, fill = Criteria)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(values=c("green", "red"))
data2 <- read.table(
header=TRUE, text='
Criteria     Techniques              Percentage
1    FPR       HTTP-UNSWNB-ensemble           2.58
2    DR        HTTP-UNSWNB-ensemble           97.02
3    FPR       HTTP-NIMS-ensemble             2.15
4    DR        HTTP-NIMS-ensemble             97.95
5    FPR       HTTP-UNSWNB-SVM                5.81
6    DR        HTTP-UNSWNB-SVM                95.52
7    FPR       HTTP-NIMS-BN                   7.20
8    DR        HTTP-NIMS-BN                    94.11
')
ggplot(data2,aes(Techniques, Percentage, fill = Criteria)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(values=c("green", "red"))
library(ggplot2)
par(mfrow=c(1,2))
data1 <- read.table(
header=TRUE, text='
Criteria     Techniques              Percentage
1    FPR       DNS-UNSWNB-ensemble            1.38
2    DR        DNS-UNSWNB-ensemble            98.93
5    FPR       DNS-UNSWNB-SVM                 6.13
6    DR        DNS-UNSWNB-SVM                 94.58
3    FPR       DNS-NIMS-ensemble              2.01
4    DR        DNS-NIMS-ensemble              97.38
7    FPR       DNS-NIMS-BN                    7.25
8    DR        DNS-NIMS-BN                    93.17
')
ggplot(data1,aes(Techniques, Percentage, fill = Criteria)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(values=c("green", "red"))
data2 <- read.table(
header=TRUE, text='
Criteria     Techniques              Percentage
1    FPR       HTTP-UNSWNB-ensemble           2.58
2    DR        HTTP-UNSWNB-ensemble           97.02
3    FPR       HTTP-NIMS-ensemble             2.15
4    DR        HTTP-NIMS-ensemble             97.95
5    FPR       HTTP-UNSWNB-SVM                5.81
6    DR        HTTP-UNSWNB-SVM                95.52
7    FPR       HTTP-NIMS-BN                   7.20
8    DR        HTTP-NIMS-BN                    94.11
')
ggplot(data2,aes(Techniques, Percentage, fill = Criteria)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(values=c("green", "red"))
library(ggplot2)
par(mfrow=c(1,2))
data1 <- read.table(
header=TRUE, text='
Criteria     Techniques              Percentage
1    FPR       DNS-UNSWNB-ensemble            1.38
2    DR        DNS-UNSWNB-ensemble            98.93
5    FPR       DNS-UNSWNB-SVM                 6.13
6    DR        DNS-UNSWNB-SVM                 94.58
3    FPR       DNS-NIMS-ensemble              2.01
4    DR        DNS-NIMS-ensemble              97.38
7    FPR       DNS-NIMS-BN                    7.25
8    DR        DNS-NIMS-BN                    93.17
')
ggplot(data1,aes(Techniques, Percentage, fill = Criteria)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(values=c("green", "red"))
data2 <- read.table(
header=TRUE, text='
Criteria     Techniques              Percentage
1    FPR       HTTP-UNSWNB-ensemble           2.58
2    DR        HTTP-UNSWNB-ensemble           97.02
3    FPR       HTTP-NIMS-ensemble             2.15
4    DR        HTTP-NIMS-ensemble             97.95
5    FPR       HTTP-UNSWNB-SVM                5.81
6    DR        HTTP-UNSWNB-SVM                95.52
7    FPR       HTTP-NIMS-BN                   7.20
8    DR        HTTP-NIMS-BN                    94.11
')
ggplot(data2,aes(Techniques, Percentage, fill = Criteria)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(values=c("green", "red"))
# number of domains in datasets
H <- c(412,500, 42, 684,2000)
M <- c("UNSW-NB15", "NIMS-Alexa", "NIMS-Zeus", "NIMS-Citadel","NIMS-Conficker")
# Plot the bar chart.
barplot(H,names.arg = M,xlab = "datasets",ylab = "Number of domain names",col = "blue",
main = "",border = "red")
library(matrixStats)
correntopy<-function (input)
{
data=matrix(,nrow(input),ncol(input))
col_means=colMeans(input)
dim(col_means) <- c(1, ncol(input))
col_stds= colSds(input)
dim(col_stds) <- c(1, ncol(input))
for(y in 1:ncol(input))
{
data[,y] = (1/(sqrt(2*3.14*(col_stds[,y]))) * exp(-(col_means[,y]-input[,y])^2)/(2*col_stds[,y]^2))
}
data[is.infinite(data)] <- 0
r= rowMeans(data,na.rm = TRUE)
dim(r) <- c(1, nrow(data))
r= as.data.frame(t(r))
r= scale(r, center = TRUE, scale = FALSE)
return (r)
}
par(mfrow=c(1,2))
input1= as.matrix(normal.dns)
normal_dns=correntopy(input1)
input2= as.matrix(attack.dns)
attack_dns=correntopy(input2)
plot(normal_dns,xlab="Feature vectors",type = c("b"),main="Correntropy of DNS instances",ylab="Values",pch=1,col=3,lwd=2)
points(attack_dns,pch=2,col=2,lwd=2,type = c("b"))
legend("bottomleft", legend = c("Normal DNS ","Attack DNS"),lwd=2, pch=c(1,2),col=c(3,2))
input3= as.matrix(normal.http)
normal_http=correntopy(input3)
input4= as.matrix(attack.http)
attack_http=correntopy(input4)
plot(normal_http,xlab="Feature vectors",type = c("b"),main="Correntropy of HTTP instances",ylab="Values",pch=1,col=3,lwd=2)
points(attack_http,pch=2,col=2,lwd=2,type = c("b"))
legend("bottomright", legend = c("Normal http ","Attack http"),lwd=2, pch=c(1,2),col=c(3,2))
makeProfilePlot <- function(mylist,names)
{
require(RColorBrewer)
# find out how many variables we want to include
numvariables <- length(mylist)
# choose 'numvariables' random colours
colours <- brewer.pal(numvariables,"Set1")
# find out the minimum and maximum values of the variables:
mymin <- 1e+20
mymax <- 1e-20
for (i in 1:numvariables)
{
vectori <- mylist[[i]]
mini <- min(vectori)
maxi <- max(vectori)
if (mini < mymin) { mymin <- mini }
if (maxi > mymax) { mymax <- maxi }
}
# plot the variables
for (i in 1:numvariables)
{
vectori <- mylist[[i]]
namei <- names[i]
colouri <- colours[i+2]
if (i == 1) { plot(vectori,col=colouri,type="l",ylim=c(mymin,mymax),main="Attack DNS data",xlab="Feature vectors",ylab = "Values") }
else { points(vectori, col=colouri,type="l") }
lastxval <- length(vectori)
lastyval <- vectori[length(vectori)]
text((lastxval-10),(lastyval),namei,col="black",cex=0.6)
}
}
library(RColorBrewer)
nor_data=attack.dns[1:100,1:9]
par(mfrow=c(1,2))
names <- c("","","","","")
mylist <- list(nor_data[,1],nor_data[,2],nor_data[,3],nor_data[,4],nor_data[,5],nor_data[,6],nor_data[,7],nor_data[,8],nor_data[,9])
makeProfilePlot(mylist,names)
#nor_data=matrix(,nrow(or_data),ncol(or_data))
#for(y in 1:ncol(or_data))
#{
# nor_data[,y] = (or_data[,y] - min(or_data[,y])) / (max(or_data[,y]) - min(or_data[,y]))
#}
### DNS and HTTP techniques
par(mfrow=c(1,2))
##### DNS data source UNSW
dat1 <- data.frame(TPR = c(85, 89, 94.15),FPR = c( 5.22,22,60))
op <- par(xaxs = "i", yaxs = "i")
plot(TPR ~ FPR, data = dat1, xlim = c(0,100), ylim = c(0,100), type = "n",main="UNSW-NB15 - DNS data source",xlab="False Positive Rate %",ylab="Detection Rate %")
with(dat1, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=1,lwd=2, col= 4,pch=NA_integer_))
#abline(0, 1)
par(op)
# add points
dat2 <- data.frame(TPR = c(73, 87, 90.78),FPR = c( 8.25,40,55))
points(TPR ~ FPR, dat2,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat2, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=2,lwd=2, col=2,pch=NA_integer_))
# add points
dat3 <- data.frame(TPR = c(78, 88, 92.61),FPR = c( 7.78,36,59))
points(TPR ~ FPR, dat3,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat3, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=3,lwd=2, col=3,pch=NA_integer_))
dat4 <- data.frame(TPR = c(95, 98, 99),FPR = c( 1.38,50,78))
points(TPR ~ FPR, dat4,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat4, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=4,lwd=2, col=6,pch=NA_integer_))
legend("bottomright", legend = c("DT","NB","ANN", "Ensemble method"),lwd=2, col=c(4,2,3,6), lty=c(1,2,3,4))
dat1 <- data.frame(TPR = c(85, 89, 94.15),FPR = c( 5.22,22,60))
op <- par(xaxs = "i", yaxs = "i")
plot(TPR ~ FPR, data = dat1, xlim = c(0,100), ylim = c(0,100), type = "n",main="UNSW-NB15 - DNS data source",xlab="False Positive Rate %",ylab="Detection Rate %")
with(dat1, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=1,lwd=2, col= 4,pch=NA_integer_))
#abline(0, 1)
par(op)
# add points
dat2 <- data.frame(TPR = c(73, 87, 90.78),FPR = c( 8.25,40,55))
points(TPR ~ FPR, dat2,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat2, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=2,lwd=2, col=2,pch=NA_integer_))
# add points
dat3 <- data.frame(TPR = c(78, 88, 92.61),FPR = c( 7.78,36,59))
points(TPR ~ FPR, dat3,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat3, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=3,lwd=2, col=3,pch=NA_integer_))
dat4 <- data.frame(TPR = c(95, 98, 99),FPR = c( 1.38,50,78))
points(TPR ~ FPR, dat4,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat4, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=4,lwd=2, col=6,pch=NA_integer_))
legend("bottomright", legend = c("DT","NB","ANN", "Ensemble method"),lwd=2, col=c(4,2,3,6), lty=c(1,2,3,4))
par(mfrow=c(1,2))
dat1 <- data.frame(TPR = c(86, 90, 96.34),FPR = c( 3.43,25,57))
op <- par(xaxs = "i", yaxs = "i")
plot(TPR ~ FPR, data = dat1, xlim = c(0,100), ylim = c(0,100), type = "n",main="UNSW-NB15 - HTTP data source",xlab="False Positive Rate %",ylab="Detection Rate %")
with(dat1, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=1,lwd=2, col= 4,pch=NA_integer_))
#abline(0, 1)
par(op)
# add points
dat2 <- data.frame(TPR = c(76, 88, 95.25),FPR = c( 4.18,30,60))
points(TPR ~ FPR, dat2,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat2, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=2,lwd=2, col=2,pch=NA_integer_))
# add points
dat3 <- data.frame(TPR = c(79, 90, 95.53),FPR = c( 4.26,32,58))
points(TPR ~ FPR, dat3,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat3, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=3,lwd=2, col=3,pch=NA_integer_))
dat4 <- data.frame(TPR = c(90, 93, 97.02),FPR = c( 2.58,20,40))
points(TPR ~ FPR, dat4,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat4, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=4,lwd=2, col=6,pch=NA_integer_))
legend("bottomright", legend = c("DT","NB","ANN", "Ensemble method"),lwd=2, col=c(4,2,3,6), lty=c(1,2,3,4))
##### HTTP data source- NISM
dat1 <- data.frame(TPR = c(84, 88, 95.92),FPR = c( 4.65,22,50))
op <- par(xaxs = "i", yaxs = "i")
plot(TPR ~ FPR, data = dat1, xlim = c(0,100), ylim = c(0,100), type = "n",main="NIMS - HTTP data source",xlab="False Positive Rate %",ylab="Detection Rate %")
with(dat1, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=1,lwd=2, col= 4,pch=NA_integer_))
#abline(0, 1)
par(op)
# add points
dat2 <- data.frame(TPR = c(77, 85, 92.19),FPR = c( 6.87,31,61))
points(TPR ~ FPR, dat2,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat2, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=2,lwd=2, col=2,pch=NA_integer_))
# add points
dat3 <- data.frame(TPR = c(78, 89, 94.34),FPR = c( 5.13,33,59))
points(TPR ~ FPR, dat3,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat3, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=3,lwd=2, col=3,pch=NA_integer_))
dat4 <- data.frame(TPR = c(90.5, 94, 97.95),FPR = c( 2.15,19,39))
points(TPR ~ FPR, dat4,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat4, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=4,lwd=2, col=6,pch=NA_integer_))
legend("bottomright", legend = c("DT","NB","ANN", "Ensemble method"),lwd=2, col=c(4,2,3,6), lty=c(1,2,3,4))
par(mfrow=c(1,2))
dat1 <- data.frame(TPR = c(86, 90, 96.34),FPR = c( 3.43,25,57))
op <- par(xaxs = "i", yaxs = "i")
plot(TPR ~ FPR, data = dat1, xlim = c(0,100), ylim = c(0,100), type = "n",main="UNSW-NB15 - HTTP data source",xlab="False Positive Rate %",ylab="Detection Rate %")
with(dat1, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=1,lwd=2, col= 4,pch=NA_integer_))
#abline(0, 1)
par(op)
# add points
dat2 <- data.frame(TPR = c(76, 88, 95.25),FPR = c( 4.18,30,60))
points(TPR ~ FPR, dat2,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat2, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=2,lwd=2, col=2,pch=NA_integer_))
# add points
dat3 <- data.frame(TPR = c(79, 90, 95.53),FPR = c( 4.26,32,58))
points(TPR ~ FPR, dat3,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat3, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=3,lwd=2, col=3,pch=NA_integer_))
dat4 <- data.frame(TPR = c(90, 93, 97.02),FPR = c( 2.58,20,40))
points(TPR ~ FPR, dat4,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat4, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=4,lwd=2, col=6,pch=NA_integer_))
legend("bottomright", legend = c("DT","NB","ANN", "Ensemble method"),lwd=2, col=c(4,2,3,6), lty=c(1,2,3,4))
library(ggplot2)
par(mfrow=c(1,2))
data1 <- read.table(
header=TRUE, text='
Criteria     Techniques              Percentage
1    FPR       DNS-UNSWNB-ensemble            1.38
2    DR        DNS-UNSWNB-ensemble            98.93
5    FPR       DNS-UNSWNB-SVM                 6.13
6    DR        DNS-UNSWNB-SVM                 94.58
3    FPR       DNS-NIMS-ensemble              2.01
4    DR        DNS-NIMS-ensemble              97.38
7    FPR       DNS-NIMS-BN                    7.25
8    DR        DNS-NIMS-BN                    93.17
')
ggplot(data1,aes(Techniques, Percentage, fill = Criteria)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(values=c("green", "red"))
ggplot(data1,aes(Techniques, Percentage, fill = Criteria)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(values=c("green", "red"))+
theme(plot.title = element_text(hjust = 0.5, size=16,face="bold"), axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold"))
ggplot(data1,aes(Techniques, Percentage, fill = Criteria)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(values=c("green", "red"))+
theme(plot.title = element_text(hjust = 0.5, size=12,face="bold"), axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold"))
ggplot(data1,aes(Techniques, Percentage, fill = Criteria)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(values=c("green", "red"))+
theme(plot.title = element_text(hjust = 0.5, size=12,face="bold"), axis.text=element_text(size=12),
axis.title=element_text(size=12,face="bold"))
ggplot(data1,aes(Techniques, Percentage, fill = Criteria)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(values=c("green", "red"))+
theme(legend.position="none", plot.title = element_text(hjust = 0.5, size=16,face="bold"), axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold"))
ggplot(data1,aes(Techniques, Percentage, fill = Criteria)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(values=c("green", "red"))
dat1 <- data.frame(TPR = c(85, 89, 94.15),FPR = c( 5.22,22,60))
op <- par(xaxs = "i", yaxs = "i")
plot(TPR ~ FPR, data = dat1, xlim = c(0,100), ylim = c(0,100), type = "n",main="UNSW-NB15 - DNS data source",xlab="False Positive Rate %",ylab="Detection Rate %")
with(dat1, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=1,lwd=2, col= 4,pch=NA_integer_))
#abline(0, 1)
par(op)
dat1 <- data.frame(TPR = c(85, 89, 94.15),FPR = c( 5.22,22,60))
op <- par(xaxs = "i", yaxs = "i")
plot(TPR ~ FPR, data = dat1, xlim = c(0,100), ylim = c(0,100), type = "n",main="UNSW-NB15 - DNS data source",xlab="False Positive Rate %",ylab="Detection Rate %")
with(dat1, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=1,lwd=2, col= 4,pch=NA_integer_))
#abline(0, 1)
par(op)
# add points
dat2 <- data.frame(TPR = c(73, 87, 90.78),FPR = c( 8.25,40,55))
points(TPR ~ FPR, dat2,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat2, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=2,lwd=2, col=2,pch=NA_integer_))
# add points
dat3 <- data.frame(TPR = c(78, 88, 92.61),FPR = c( 7.78,36,59))
points(TPR ~ FPR, dat3,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat3, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=3,lwd=2, col=3,pch=NA_integer_))
dat4 <- data.frame(TPR = c(95, 98, 99),FPR = c( 1.38,50,78))
points(TPR ~ FPR, dat4,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat4, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=4,lwd=2, col=6,pch=NA_integer_))
legend("bottomright", legend = c("DT","NB","ANN", "Ensemble method"),lwd=2, col=c(4,2,3,6), lty=c(1,2,3,4))
library(matrixStats)
correntopy<-function (input)
{
data=matrix(,nrow(input),ncol(input))
col_means=colMeans(input)
dim(col_means) <- c(1, ncol(input))
col_stds= colSds(input)
dim(col_stds) <- c(1, ncol(input))
for(y in 1:ncol(input))
{
data[,y] = (1/(sqrt(2*3.14*(col_stds[,y]))) * exp(-(col_means[,y]-input[,y])^2)/(2*col_stds[,y]^2))
}
data[is.infinite(data)] <- 0
r= rowMeans(data,na.rm = TRUE)
dim(r) <- c(1, nrow(data))
r= as.data.frame(t(r))
r= scale(r, center = TRUE, scale = FALSE)
return (r)
}
par(mfrow=c(1,2))
input1= as.matrix(normal.dns)
normal_dns=correntopy(input1)
input2= as.matrix(attack.dns)
attack_dns=correntopy(input2)
plot(normal_dns,xlab="Feature vectors",type = c("b"),main="Correntropy of DNS instances",ylab="Values",pch=1,col=3,lwd=2)
points(attack_dns,pch=2,col=2,lwd=2,type = c("b"))
legend("bottomleft", legend = c("Normal DNS ","Attack DNS"),lwd=2, pch=c(1,2),col=c(3,2))
input3= as.matrix(normal.http)
normal_http=correntopy(input3)
input4= as.matrix(attack.http)
attack_http=correntopy(input4)
plot(normal_http,xlab="Feature vectors",type = c("b"),main="Correntropy of HTTP instances",ylab="Values",pch=1,col=3,lwd=2)
points(attack_http,pch=2,col=2,lwd=2,type = c("b"))
legend("bottomright", legend = c("Normal http ","Attack http"),lwd=2, pch=c(1,2),col=c(3,2))
data=matrix(,nrow(input),ncol(input))
View(attack.dns)
input1= as.matrix(normal.dns)
normal_dns=correntopy(input1)
View(normal_dns)
normal_dns=correntopy(input1)
View(normal_dns)
View(normal_dns)
View(normal.dns)
normal.dns
View(normal.dns)
input1= as.matrix(normal.dns[1:3,1:3])
normal_dns=correntopy(input1)
normal.dns[1:3,1:3]
normal_dns=correntopy(input1)
normal_dns
View(normal.dns)
View(normal_dns)
View(normal_dns)
x=normal.dns[1:3,1:3]
View(x)
input1= as.matrix(x=normal.dns[2:5,1:3])
x=normal.dns[2:5,1:3]
View(x)
input1= as.matrix(x=normal.dns[2:5,3:6])
x=normal.dns[2:5,3:6]
View(x)
View(normal.dns)
View(normal.http)
View(attack_dns)
View(attack_http)
View(attack_dns)
input3= as.matrix(normal.http[1:3,2:4])
normal_http=correntopy(input3)
normal.http[1:3,2:4
normal_http=correntopy(input3)
normal.http[1:3,2:4]
View(normal_http)
View(normal.http)
input3= as.matrix(normal.http[2:4,2:4])
normal.http[2:4,2:4]
input3= as.matrix(normal.http[3:6,2:4])
normal.http[3:6,2:4]
View(normal.http)
input3= as.matrix(normal.http[12:14,2:4])
input3
normal_http=correntopy(input3)
normal_http
normal.http[12:14,2:4]
